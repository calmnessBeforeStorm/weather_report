import requests, datetime

weather_descriptions = {

    'clear sky': '–±–µ–∑-–¥–æ–∂–¥–∏–∫–æ–≤–æ–µ –Ω–µ–±–æ‚òÄÔ∏è',

    'few clouds': '–º–∏–Ω–∏ –æ–±–ª–∞—á–∫–∏üå§Ô∏è',



    'scattered clouds': '—Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±–ª–∞—á–∫–∞‚òÅÔ∏è',

    'broken clouds': '—Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±–ª–∞—á–∫–∞‚òÅÔ∏è',

    'overcast clouds': '–≥—Ä—É—Å—Ç–Ω—ã–µ –æ–±–ª–∞—á–∫–∞üå•Ô∏è',



    'light rain': '–≤—Å–ø–æ—Ç–µ–ª–∏ –æ–±–ª–∞—á–∫–∞üåßÔ∏è',

    'moderate rain': '–≤—Å–ø–ª–∞–∫–Ω—É–ª–∏ –æ–±–ª–∞—á–∫–∞üåßÔ∏è',

    'heavy intensity rain': '–Ω–µ—Ä–≤–Ω—ã–π —Å—Ä—ã–≤ –æ–±–ª–∞—á–∫–æ–≤üåßÔ∏è',

    'very heavy rain': '–¥–≤–æ–π–Ω–æ–π –Ω–µ—Ä–≤–Ω—ã–π —Å—Ä—ã–≤ –æ–±–ª–∞—á–∫–æ–≤üåßÔ∏è',

    'extreme rain': '–Ω–µ—Ä–≤–Ω—ã–π —Å—Ä—ã–≤ —Å –∞–ø–∞—Ç–∏–µ–π –æ–±–ª–∞—á–∫–æ–≤üåßÔ∏è',

    'freezing rain': '–Ω–µ—Ä–≤–Ω—ã–π —Å—Ä—ã–≤ –æ–±–ª–∞—á–∫–æ–≤ –≤ –∞–Ω—Ç–∞—Ä–∫—Ç–∏–¥–µ‚ùÑÔ∏èüåßÔ∏è',

    'light intensity shower rain': '–ø–ª–∞—á—å —Å–æ —Å–º–µ—Ö–æ–ºüå¶Ô∏è',

    'shower rain': '–¥–µ–ø—Ä–µ—à–Ω –æ–±–ª–∞—á–∫–∏üå¶Ô∏è',

    'heavy intensity shower rain': '–ø–ª–∞—á—å –∫–∞–ø—Ä–∏–∑–Ω–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞üåßÔ∏èüåßÔ∏è',

    'ragged shower rain': '–∫—Ä–æ—Å—Å 15 –º–µ—Ç—Ä–æ–≤ –∏ —Ä–µ–∑–∫–∏–π —Å—Ç–æ–øüå¶Ô∏è',



    'light intensity drizzle': '–º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—å –º–∞–ª–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏üåßÔ∏è',

    'drizzle': '—Å–æ–ø–ª–∏ –≤—ã—Ç–µ–∫–∞—é—Ç –Ω–∞—Ä—É–∂—ÉüåßÔ∏è',

    'heavy intensity drizzle': '–º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—å —Å–∏–ª—å–Ω–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏üåßÔ∏è',

    'light intensity drizzle rain': '–º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—å –Ω–µ–±–æ–ª—å—à–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏üåßÔ∏è',

    'drizzle rain': '–º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—åüåßÔ∏è',

    'heavy intensity drizzle rain': '—Å–∏–ª—å–Ω—ã–π –º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—åüåßÔ∏è',

    'shower rain and drizzle': '–ø—Ä–æ–ª–∏–≤–Ω–æ–π –¥–æ–∂–¥—å –∏ –º–æ—Ä–æ—Å—åüåßÔ∏è',

    'heavy shower rain and drizzle': '—Å–∏–ª—å–Ω—ã–π –ª–∏–≤–µ–Ω—å –∏ –º–æ—Ä–æ—Å—åüåßÔ∏è',

    'shower drizzle': '–ª–∏–≤–µ–Ω—å –º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—åüåßÔ∏è',



    'thunderstorm': '–≥—Ä–æ–∑–∞üå©',

    'thunderstorm with light rain': '–≥—Ä–æ–∑–∞ —Å –Ω–µ–±–æ–ª—å—à–∏–º –¥–æ–∂–¥–µ–º‚õà',

    'thunderstorm with rain': '–≥—Ä–æ–∑–∞ —Å –¥–æ–∂–¥–µ–º‚õà',

    'thunderstorm with heavy rain': '–≥—Ä–æ–∑–∞ —Å –ø—Ä–æ–ª–∏–≤–Ω—ã–º –¥–æ–∂–¥–µ–º‚õà',

    'light thunderstorm': '–ª–µ–≥–∫–∞—è –≥—Ä–æ–∑–∞üå©',

    'heavy thunderstorm': '—Å–∏–ª—å–Ω–∞—è –≥—Ä–æ–∑–∞üå©',

    'ragged thunderstorm': '—Ä–≤–∞–Ω–∞—è –≥—Ä–æ–∑–∞üå©',

    'thunderstorm with light drizzle': '–≥—Ä–æ–∑–∞ —Å –ª–µ–≥–∫–∏–º –º–æ—Ä–æ—Å—è—â–∏–º –¥–æ–∂–¥–µ–º‚õà',

    'thunderstorm with drizzle': '–≥—Ä–æ–∑–∞ —Å –º–æ—Ä–æ—Å—è—â–∏–º –¥–æ–∂–¥–µ–º‚õà',

    'thunderstorm with heavy drizzle': '–≥—Ä–æ–∑–∞ —Å —Å–∏–ª—å–Ω—ã–º –º–æ—Ä–æ—Å—è—â–∏–º –¥–æ–∂–¥–µ–º‚õà',



    'fog': '–æ–±–ª–∞–∞–∫–∞ –ø–∞—Ä—è—Çüå´',

    'mist': '–æ–±–ª–∞–∫–∞ –∫—É—Ä—è—Çüå´',

    'smog': '—Ç–æ–∫—Å–∏–∫ –æ–±–ª–∞—á–∫–∞ –∫—É—Ä—è—Ç',

    'haze': '–º–≥–ª–∞',

    'sand': '–≤—ã—Å–æ–∫–∞—è –ø—ã–ª—å',

    'dust whirls': '–≤–∏—Ö—Ä–∏ –ø—ã–ª–∏',

    'dust whirls': '–≤—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∏–π –ø–µ–ø–µ–ª',

    'squalls': '—à–∫–≤–∞–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä',

    'tornado': '—Ç–æ—Ä–Ω–∞–¥–æ',



    'light snow': '–º–æ—Ä–æ–∂–µ–Ω–∫–∏ –ø–∞–¥–∞—é—Ç‚ùÑÔ∏è',

    'snow': '–º–æ—Ä–æ–∂–µ–Ω–Ω–æ–µ‚ùÑÔ∏è',

    'heavy snow': '—É–ª—å—Ç–∞ –º–æ—Ä–æ–∂–µ–Ω–Ω—ã—Ö‚ùÑÔ∏è',

    'sleet': '–º–æ—Ä–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ –±–∞–ª–∏‚ùÑÔ∏è',

    'light shower sleet': '–∫—É—Ä—è—â–∏–µ –æ–±–ª–∞–∫–∞ –Ω–∞ –±–∞–ª–∏ —Å –º–æ—Ä–æ–∂–µ–Ω–Ω—ã–º‚ùÑÔ∏èüåßÔ∏è',

    'shower sleet': '–ª–∏–≤–µ–Ω—å —Å –º–æ–∫—Ä—ã–º —Å–Ω–µ–≥–æ–º‚ùÑÔ∏èüåßÔ∏è',

    'light rain and snow': '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å –∏ —Å–Ω–µ–≥‚ùÑÔ∏èüåßÔ∏è',

    'rain and snow': '–¥–æ–∂–¥—å –∏ —Å–Ω–µ–≥‚ùÑÔ∏èüåßÔ∏è',

    'light shower snow': '–ª–µ–≥–∫–∏–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º‚ùÑÔ∏èüåßÔ∏è',

    'shower sleet': '–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –¥–æ–∂–¥—å‚ùÑÔ∏è',

    'heavy shower snow': '—Å–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –¥–æ–∂–¥—å‚ùÑÔ∏èüåß'

}

class Weather():
    def __init__(self, current, forecast):
        self.current = current
        self.forecast = forecast

    def get_current_data(self):
        #–ø–æ–ª—É—á–∞—é –∏–Ω—Ñ—É –≤ —Ç–µ–∫—É—â–µ–º –º–æ–º–µ–Ω—Ç–µ
        current = requests.get(self.current)
        data = current.json()

        if data['wind']['speed'] <= 0.2:
            windSpeedDescription = '–®—Ç–∏–ª—å'
        elif data['wind']['speed'] <= 1.5:
            windSpeedDescription = '–¢–∏—Ö–∏–π'
        elif data['wind']['speed'] <= 3.3:
            windSpeedDescription = '–õ–µ–≥–∫–∏–π'
        elif data['wind']['speed'] <= 5.4:
            windSpeedDescription = '–°–ª–∞–±—ã–π'
        elif data['wind']['speed'] <= 7.9:
            windSpeedDescription = '–£–º–µ—Ä–µ–Ω–Ω—ã–π'
        elif data['wind']['speed'] <= 10.7:
            windSpeedDescription = '–£–º–µ—Ä–µ–Ω–Ω—ã–π+'
        elif data['wind']['speed'] <= 13.8:
            windSpeedDescription = '–°–∏–ª—å–Ω—ã–π'
        elif data['wind']['speed'] <= 17.1:
            windSpeedDescription = '–°–∏–ª—å–Ω—ã–π+'
        elif data['wind']['speed'] <= 20.7:
            windSpeedDescription = '–û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π, —É—à—ã–ø –∫–µ—Ç–µ—Å–∏–Ω'
        else:
            windSpeedDescription = '–®—Ç–æ—Ä–º!'

        return {
            'windspeed': data['wind']['speed'],
            'windspeedDescription': windSpeedDescription,
            'temp': data['main']['temp'],
            'temp_like': data['main']['feels_like'],
            'humidity': data['main']['humidity'],
            'description': weather_descriptions.get(data['weather'][0]['description'], data['weather'][0]['description'])
        }

    def get_presentDay_data(self):
        present = requests.get(self.forecast)
        data = present.json()

        currentDateTime = datetime.date.today()

        morningKey = None
        afternoonKey = None
        eveningKey = None

        for value in data["list"]:
            dt_text = value["dt_txt"]
            if f"{currentDateTime.strftime('%Y-%m-%d')} 09:00:00" in dt_text:
                morningKey = value
            if f"{currentDateTime.strftime('%Y-%m-%d')} 12:00:00" in dt_text:
                afternoonKey = value
            if f"{currentDateTime.strftime('%Y-%m-%d')} 21:00:00" in dt_text:
                eveningKey = value

        def get_windspeed_Description(speed):
            if speed <= 0.2:
                return '–®—Ç–∏–ª—å'
            elif speed <= 1.5:
                return '–¢–∏—Ö–∏–π'
            elif speed <= 3.3:
                return '–õ–µ–≥–∫–∏–π'
            elif speed <= 5.4:
                return '–°–ª–∞–±—ã–π'
            elif speed <= 7.9:
                return '–£–º–µ—Ä–µ–Ω–Ω—ã–π'
            elif speed <= 10.7:
                return '–£–º–µ—Ä–µ–Ω–Ω—ã–π+'
            elif speed <= 13.8:
                return '–°–∏–ª—å–Ω—ã–π'
            elif speed <= 17.1:
                return '–°–∏–ª—å–Ω—ã–π+'
            elif speed <= 20.7:
                return '–û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π, —É—à—ã–ø –∫–µ—Ç–µ—Å–∏–Ω'
            else:
                return '–®—Ç–æ—Ä–º!'

        wsdM = get_windspeed_Description(morningKey['wind']['speed'])
        wsdA = get_windspeed_Description(afternoonKey['wind']['speed'])
        wsdE = get_windspeed_Description(eveningKey['wind']['speed'])

        return {
            'windspeedMoring': morningKey['wind']['speed'],
            'windspeedAfternoon': afternoonKey['wind']['speed'],
            'windspeedEvening': eveningKey['wind']['speed'],

            'windspeedDescriptionMorning': wsdM,
            'windspeedDescriptionAfternoon': wsdA,
            'windspeedDescriptionEvening': wsdE,

            'tempMorning': morningKey['main']['temp'],
            'tempAfternoon': afternoonKey['main']['temp'],
            'tempEvening': eveningKey['main']['temp'],

            'tempLikeMorning': morningKey['main']['feels_like'],
            'tempLikeAfternoon': afternoonKey['main']['feels_like'],
            'tempLikeEvening': eveningKey['main']['feels_like'],

            'humidityMorning': morningKey['main']['humidity'],
            'humidityAfternoon': afternoonKey['main']['humidity'],
            'humidityEvening': eveningKey['main']['humidity'],

            'descriptionMorning': weather_descriptions.get(morningKey['weather'][0]['description'],
                                                           morningKey['weather'][0]['description']),
            'descriptionAfternoon': weather_descriptions.get(afternoonKey['weather'][0]['description'],
                                                             afternoonKey['weather'][0]['description']),
            'descriptionEvening': weather_descriptions.get(eveningKey['weather'][0]['description'],
                                                           eveningKey['weather'][0]['description']),
        }

    def get_nextDay_data(self):
        nextday = requests.get(self.forecast)
        data = nextday.json()

        currentDateTime = datetime.date.today()

        nextDateTime = currentDateTime + datetime.timedelta(days=1)

        morningKey = None
        afternoonKey = None
        eveningKey = None

        for value in data["list"]:
            dt_text = value["dt_txt"]
            if f"{nextDateTime.strftime('%Y-%m-%d')} 09:00:00" in dt_text:
                morningKey = value
            if f"{nextDateTime.strftime('%Y-%m-%d')} 12:00:00" in dt_text:
                afternoonKey = value
            if f"{nextDateTime.strftime('%Y-%m-%d')} 21:00:00" in dt_text:
                eveningKey = value

        def get_windspeed_Description(speed):
          if speed <= 0.2:
              return '–®—Ç–∏–ª—å'
          elif speed <= 1.5:
              return '–¢–∏—Ö–∏–π'
          elif speed <= 3.3:
              return '–õ–µ–≥–∫–∏–π'
          elif speed <= 5.4:
              return '–°–ª–∞–±—ã–π'
          elif speed <= 7.9:
              return '–£–º–µ—Ä–µ–Ω–Ω—ã–π'
          elif speed <= 10.7:
              return '–£–º–µ—Ä–µ–Ω–Ω—ã–π+'
          elif speed <= 13.8:
              return '–°–∏–ª—å–Ω—ã–π'
          elif speed <= 17.1:
              return '–°–∏–ª—å–Ω—ã–π+'
          elif speed <= 20.7:
              return '–û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π, —É—à—ã–ø –∫–µ—Ç–µ—Å–∏–Ω'
          else:
              return '–®—Ç–æ—Ä–º!'

        wsdM = get_windspeed_Description(morningKey['wind']['speed'])
        wsdA = get_windspeed_Description(afternoonKey['wind']['speed'])
        wsdE = get_windspeed_Description(eveningKey['wind']['speed'])

        return {
            'windspeedMoring' : morningKey['wind']['speed'],
            'windspeedAfternoon' : afternoonKey['wind']['speed'],
            'windspeedEvening' : eveningKey['wind']['speed'],

            'windspeedDescriptionMorning': wsdM,
            'windspeedDescriptionAfternoon': wsdA,
            'windspeedDescriptionEvening': wsdE,

            'tempMorning': morningKey['main']['temp'],
            'tempAfternoon': afternoonKey['main']['temp'],
            'tempEvening': eveningKey['main']['temp'],

            'tempLikeMorning': morningKey['main']['feels_like'],
            'tempLikeAfternoon': afternoonKey['main']['feels_like'],
            'tempLikeEvening': eveningKey['main']['feels_like'],

            'humidityMorning': morningKey['main']['humidity'],
            'humidityAfternoon': afternoonKey['main']['humidity'],
            'humidityEvening': eveningKey['main']['humidity'],

            'descriptionMorning': weather_descriptions.get(morningKey['weather'][0]['description'], morningKey['weather'][0]['description']),
            'descriptionAfternoon': weather_descriptions.get(afternoonKey['weather'][0]['description'], afternoonKey['weather'][0]['description']),
            'descriptionEvening': weather_descriptions.get(eveningKey['weather'][0]['description'], eveningKey['weather'][0]['description']),
        }
